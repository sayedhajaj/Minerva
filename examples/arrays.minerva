
external class Array<T> (size: Int, initialiser: (Int)=>T) {
    var length: Int;

    function get(index: Int): T;
    function set(index: Int, value: T);

    function map<V>(mapper: (T)=>V): Array<V>;

    function reduce(reducer: (T, T)=>T, initial: T): T;
};


function ident(item: String): String => item;


/*



var arr = [1, 2, 3, 4];
var blah = 3;


function double(num:Int) => num*2;

var res = arr.map<Int>(double);
printType arr;
print res.map<Int>(double);

function mult(accumulator: Int, current: Int) => accumulator * current;


function sum(acc: Int, curr: Int) => acc+curr;

print(arr.reduce(mult, 1));

print arr.length + 2;

print ["name", "age"].length + 1;
print ["name", "age"].map<String>(ident);

var mappedStrings = ["name", "age"].map<String>(ident);
print mappedStrings;
*/
function printStringArray(lst: String[]) => {
    print lst;
};

function createStringArray(): String[] => Array<String>(1, function (index: Int) => {"name";});

//var stringArray: Array<String> = Array<String>(1, function (index: Int) => {"name";});
//var stringArray: String[] = createStringArray();
var stringArray = ["a"];
printType stringArray;
printType stringArray.map<String>(ident);
//printStringArray(stringArray.map<String>(ident));

function initialiser(index: Int) => index+1;


/*
var arr: Array<Int> = Array<Int>(5, initialiser);
print arr;

print arr.reduce(sum, 0);
print arr.map<Int>(double).map<Int>(double);

print arr[3]+5;
*/